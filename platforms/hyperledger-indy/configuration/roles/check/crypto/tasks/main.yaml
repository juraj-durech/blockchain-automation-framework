##############################################################################################
# This role check trustee and stewards crypto in Vault
##############################################################################################

##############################################################################################
# Check if Indy Key management pod for trustee is completed
- name: Check if Indy Key management pod for trustee is completed
  vars:
    identity_name: "{{ trusteeItem.name }}"
  k8s_facts:
    kind: Pod
    namespace: "{{ component_ns }}"
    kubeconfig: "{{ kubernetes.config_file }}"
    label_selectors:
      - app={{ component_name }}-{{ identity_name }}
    field_selectors:
      - status.phase=Succeeded
  register: result
  until: result.resources|length > 0
  retries: "{{ network.env.retry_count}}"
  delay: 40
  loop: "{{ services.trustees }}"
  loop_control:
    loop_var: trusteeItem
  when: services.trustees is defined

##############################################################################################
# Check if Indy Key management pod for stewards is completed
- name: Check if Indy Key management pod for stewards is completed
  vars:
    identity_name: "{{ stewardItem.name }}"
  k8s_facts:
    kind: Pod
    namespace: "{{ component_ns }}"
    kubeconfig: "{{ kubernetes.config_file }}"
    label_selectors:
      - app={{ component_name }}-{{ identity_name }}
    field_selectors:
      - status.phase=Succeeded
  register: result
  until: result.resources|length > 0
  retries: "{{ network.env.retry_count}}"
  delay: 40
  loop: "{{ services.stewards }}"
  loop_control:
    loop_var: stewardItem
  when: services.stewards is defined

##############################################################################################
# Check if Indy Key management pod for endorser is completed
- name: Check if Indy Key management pod for endorser is completed
  vars:
    identity_name: "{{ endorserItem.name }}"
  k8s_facts:
    kind: Pod
    namespace: "{{ component_ns }}"
    kubeconfig: "{{ kubernetes.config_file }}"
    label_selectors:
      - app={{ component_name }}-{{ identity_name }}
    field_selectors:
      - status.phase=Succeeded
  register: result
  until: result.resources|length > 0
  retries: "{{ network.env.retry_count}}"
  delay: 40
  loop: "{{ services.endorsers }}"
  loop_control:
    loop_var: endorserItem
  when: services.endorsers is defined

##############################################################################################
# Check trustee in vault
- name: "Check trustee in vault"
  environment:
    VAULT_TOKEN: "{{ vault_ac_token }}"
    VAULT_ADDR: "{{ vault.url }}"
  shell: vault kv get -field=did {{ organization }}/trustees/{{ trusteeItem.name }}/identity/public
  register: result
  failed_when: result.stdout == ""
  loop: "{{ services.trustees }}"
  loop_control:
    loop_var: trusteeItem
  when: services.trustees is defined

##############################################################################################
# Check stewards in vault
- name: "Check stewards in vault"
  environment:
    VAULT_TOKEN: "{{ vault_ac_token }}"
    VAULT_ADDR: "{{ vault.url }}"
  shell: vault kv get -field=did {{ organization }}/stewards/{{ stewardItem.name }}/identity/public
  register: result
  failed_when: result.stdout == ""
  loop: "{{ services.stewards }}"
  loop_control:
    loop_var: stewardItem
  when: services.stewards is defined

##############################################################################################
# Check endorser in vault
- name: "Check endorser in vault"
  environment:
    VAULT_TOKEN: "{{ vault_ac_token }}"
    VAULT_ADDR: "{{ vault.url }}"
  shell: vault kv get -field=did {{ organization }}/endorsers/{{ endorserItem.name }}/identity/public
  register: result
  failed_when: result.stdout == ""
  loop: "{{ services.endorsers }}"
  loop_control:
    loop_var: endorserItem
  when: services.endorsers is defined
